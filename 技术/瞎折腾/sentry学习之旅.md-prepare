---
name: sentry学习之旅
title: sentry学习之旅
tags: ["技术", "瞎折腾"]
categories: 瞎折腾
info: "复现好帮手，bug不用愁"
time: 2019/12/9
desc: windows如何用键盘打出任意特殊字符
keywords: ['sentry', '前端异常监控', 'Vue', 'React']
---

# sentry学习之旅

> 参考资料：
>
> - [Sentry 部署踩坑记](https://juejin.im/post/5c9f4639e51d452724598c07)
> - [Sentry项目监控工具结合vue的安装与使用（前端）](https://www.520mwx.com/view/28706)
> - [access denied for sentry-onpremise-local](https://github.com/getsentry/onpremise/issues/278)
> - [sentry本地docker化部署](https://github.com/getsentry/onpremise)
> - [前端日志监控平台sentry使用 @sentry/browser @sentry/webpack-plugin](https://juejin.im/post/5bfe0d5be51d4562587b40b9)

## 一、是什么

> Sentry 是一个开源的实时错误报告工具，支持 web 前后端、移动应用以及游戏，支持 Python、OC、Java、Go、Node、Django、RoR 等主流编程语言和框架 ，还提供了 GitHub、Slack、Trello 等常见开发工具的集成。可以多团队、多开发一起管理。

简单来说，Sentry 就是一个用于记录前端代码错误的平台工具，借助该平台，可以将项目在生产环境上发生的错误记录下来，并且根据 Sourcemap 定位到具体出错代码行，方便 debug。

具体表现形式如下图：

![sentryDebug-1.png](./images/sentryDebug-1.png)

而对于大部分的项目代码来说，只需要调用 Sentry 的 SDK 就可以方便的将错误日志集成到 Sentry 上，Sentry 自身也集成了对许多类型项目的支持，如下图：

![sentrySupport-1.jpg](./images/sentrySupport-1.jpg)

可以看到，JavaScript、React、Vue、Angular 等前端语言和框架工具都是支持的。

Sentry 的使用方式类似于 Gitlab，你可以使用官方组织提供的线上版本，也可以下载源码在服务器上部署自己的私有化服务。

Sentry 基于 Django —— 一个 python web 框架，官方提供了基于 docker 容器的部署方式，通过[这个仓库](https://github.com/getsentry/onpremise)便可以通过 docker 镜像部署私有服务。

## 二、部署

### 环境条件：

- 部署机器安装了 docker 环境
- 部署机器安装了 python 环境（推荐 python3 ，python2 会在不久以后失去官方安装脚本的支持）
- 部署机器至少还有 3G 的可用内存（推荐 4G）
- 部署机器需要能够运行 shell 脚本（win10 推荐安装 git-bash）

### 部署步骤：

1. 确认部署机器 docker 可用内存大于 3G，新建目标文件夹，将官方推荐部署仓库使用以下命令 clone 下来

   ```shell
   git clone https://github.com/getsentry/onpremise ./.
   ```

2. 随后在当前文件夹下执行 install.sh 文件

   ```shell
   ./install.sh
   ```

   安装脚本开始执行，开始拉取镜像并创建容器。

   ![sentryInstall-1.png](./images/sentryInstall-1.png)

   创建初始化用户

   ![sentryInstall-2](./images/sentryInstall-2.jpg)

3. 待脚本执行完成后，使用 docker-compose 启动容器

   ```shell
   docker-compose up -d
   ```

   ![sentryInstall-3.jpg](./images/sentryInstall-3.jpg)

4. 安装完成后，使用`docker ps`命令即可看到所有启动的容器，在浏览器中输入`127.0.0.1:9000`即可访问到 Sentry 的控制台页面。

   ![sentryInstall-4.jpg](images/sentryInstall-4.jpg)

   ![sentryLogin-1.jpg](./images/sentryLogin-1.jpg)

5. 首次登陆时可以设置 SMTP 服务器，用以项目代码发生报错时，Sentry 自动发送邮件至对应邮箱。若本地服务器开启了 SMTP 服务可以进行设置。

   ![sentryLogin-2.jpg](./images/sentryLogin-2.jpg)

6. Sentry 在国际化上提供了简体中文的语言支持，通过以下界面可以通过调整语言和所在时区，十分方便。

   ![sentrySetting-1.jpg](./images/sentrySetting-1.jpg)

   设置完成后刷新页面，即可应用设置。虽然仍有部分选项没有汉化完成，但也已经足够友好。

## 三、使用

如何在项目中集成 Sentry，其实在官网的文档中已经有了很详细的介绍。

> [文档戳我](https://docs.sentry.io/error-reporting/quickstart/?platform=browsernpm)

无论是什么部署方式，到最后原理其实都是通过调用 Sentry 准备好的 SDK，监控捕捉项目运行时出现的异常，收集信息并发送请求到 Sentry 服务器的对应端口。

SDK 引入的方式有很多种，对于以 JavaScript 为主的前端项目来说，有以下两种方式：

- 通过简单的 cdn 链接直接在页面中植入
- 通过 npm 生态库在开发时集成

以下主要结合实例介绍不同的前端框架在 npm 生态下如何集成 Sentry。

### 集成 React

- 在 Sentry 控制台中新建一个 React 监控项目

  ![sentryReact-1.jpg](./images/sentryReact-1.jpg)

- 随后在 Setting 中可以找到其对应的 DSN 地址

  ![sentryReact-2.jpg](./images/sentryReact-2.jpg)

  ![sentryReact-3.jpg](./images/sentryReact-3.jpg)

  通过该 DSN，我们的前端项目就能与 Sentry 进行通信了。

- 新建一个 React 项目，通过 npm 或 yarn 安装 Sentry 工具。

  ```shell
  npm install @sentry/browser
  ```

  在 index.js 中加入如下代码，使用在项目中出现的 DSN ：

  ```javascript
  import * as Sentry from '@sentry/browser'
  Sentry.init({dsn: "http://56f0d84b404c4943bc69021f2e5de8d2@192.168.3.50:9000/2"})
  ```

  这样当错误发生时，项目不仅会在控制台报错，还会自动发送一份错误报告到 Sentry 服务器。

  在问题面板上可以看到对应项目发生的错误：

  ![sentryReact-4.jpg](./images/sentryReact-4.jpg)

### 集成 Vue

集成 Vue 的方式和集成 React 差不多，通过 npm 安装`@sentry/browser`插件并通过与上面一样的方式就可以将 Vue 项目报出的错误自动上传至 Sentry，此外 Sentry 还为 Vue 提供了名为`@sentry/integrations`的库，用于发生错误时返回组件的信息。

具体使用如下：

1. 安装

   ```shell
   npm install @sentry/browser
   npm install @sentry/integrations
   ```

2. ```javascript
   // main.js
   import Vue from 'vue'
   import * as Sentry from '@sentry/browser';
   import * as Integrations from '@sentry/integrations';
   
   Sentry.init({
     dsn: 'http://42d505391c1742dcbdcf4119761c5485@192.168.3.50:9000/4',
     integrations: [new Integrations.Vue({Vue, attachProps: true})],
   });
   ```

需要注意的是这个插件只能在 Vue2.0 中使用，原因在 Vue 官网和 Sentry 文档中都作出了说明：因为 Sentry 的 SDK 其实是调用了 Vue 的 `Vue.config.errorHandler`钩子，每个错误发生时 Vue 都会触发该钩子函数，而 Sentry 正是通过该钩子函数返回的数据得以定位错误发生的位置以及对应的组件信息。

#### SourceMap上传







